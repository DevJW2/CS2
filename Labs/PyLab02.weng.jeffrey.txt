#Jeffrey Weng, Period 2, PyLab02
import math

def triangleArea(base, height):
    return base * height * 0.5

#print triangleArea(1, 5)

def distance(x1,y1,x2,y2):
    return math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)

x = distance(0,0,3,4)
#print x

def disc(a,b,c):
    return b ** 2 - 4 * a * c

#print disc(2,3,4)

def gradePicker(score):
    if score >= 90:
        return 'A'
    elif score >= 80:
        return 'B'
    elif score >= 70:
        return 'C'
    elif score >= 65:
        return 'D'
    else:
        return 'F'
#print gradePicker(100)

def closestPoints(ax,ay,bx,by,cx,cy):
    if distance(ax,ay,bx,by) < distance(ax,ay,cx,cy):
        if distance(ax,ay,bx,by) < distance(bx,by,cx,cy):
            return 1
        elif distance(ax,ay,bx,by) == distance(bx,by,cx,cy):
            return 1
        else:
            return 3
    elif distance(ax,ay,cx,cy) == distance(bx,by,cx,cy):
        return 2
    elif distance(ax,ay,cx,cy) < distance(bx,by,cx,cy):
        return 2
    else:
        return 3


#print closestPoints(0,0,1,1,5,5)    
#print closestPoints(0,0,1,1,0.1,0.1) 
#print closestPoints(-1,0,0,1,1,0) 
#print closestPoints(0,10,1,0,-1,0)

def numRoots(a,b,c):
    if disc(a,b,c) > 0:
        return 2
    elif disc(a,b,c) == 0:
        return 1
    else:
        return 0

#print numRoots(1,2,3) #returns 0
#print numRoots(1,2,1) #returns 1
#print numRoots(3,4,1) #returns 2

def quadsolvePlus(a,b,c):
    if disc(a,b,c) < 0:
        return "No Real Roots"
    else:
        return (-b + math.sqrt(disc(a,b,c))) / (2.0 * a)
        
#print quadsolvePlus(1,-3,-10) #returns 5.0
#print quadsolvePlus(2,-9,4) #returns 4.0
#print quadsolvePlus(1,0,-36) #returns 6.0
#print quadsolvePlus(1,-4,5) #returns No Real Roots
#print quadsolvePlus(5,2,1) #returns No Real Roots
#print quadsolvePlus(1,-4,5) #returns No Real Roots
    

def quadsolve(a,b,c,sign):
    if sign < 0:
        if disc(a,b,c) < 0:
            return "No Real Roots"
        else:
            return (-b - math.sqrt(disc(a,b,c))) / (2.0 * a)
    else:
        if disc(a,b,c) < 0:
            return "No Real Roots"
        return (-b + math.sqrt(disc(a,b,c))) / (2.0 * a)
    

#print quadsolve(1,-3,-10,-1) #returns -2.0
#print quadsolve(1,-3,-10,3) #returns 5.0
#print quadsolve(2,-9,4,5) #returns 4.0
#print quadsolve(2,-9,4,-3) #returns 0.5
#print quadsolve(1,0,-36,4) #returns 6.0
#print quadsolve(1,0,-36,-34) #returns -6.0
#print quadsolve(5,2,1,1) #returns No Real Roots
#print quadsolve(1,-4,5,1) #returns No Real Roots
#print quadsolve(5,2,1,-1) #returns No Real Roots
#print quadsolve(1,-4,5,-1) #returns No Real Roots


